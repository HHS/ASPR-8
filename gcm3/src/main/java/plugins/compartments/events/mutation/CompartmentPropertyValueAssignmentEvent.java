package plugins.compartments.events.mutation;

import net.jcip.annotations.Immutable;
import nucleus.Event;
import plugins.compartments.events.observation.CompartmentPropertyChangeObservationEvent;
import plugins.compartments.support.CompartmentId;
import plugins.compartments.support.CompartmentPropertyId;

/**
 * 
 * An event for setting a compartment property value. A corresponding
 * {@linkplain CompartmentPropertyChangeObservationEvent} event is generated by
 * event resolution and distributed to the relevant subscribers.
 * 
 */
@Immutable
public final class CompartmentPropertyValueAssignmentEvent implements Event {

	private final CompartmentId compartmentId;

	private final CompartmentPropertyId compartmentPropertyId;

	private final Object compartmentPropertyValue;

	/**
	 * Constructs this event. 
	 *
	 */
	public CompartmentPropertyValueAssignmentEvent(CompartmentId compartmentId, CompartmentPropertyId compartmentPropertyId, Object compartmentPropertyValue) {
		super();
		this.compartmentId = compartmentId;
		this.compartmentPropertyId = compartmentPropertyId;
		this.compartmentPropertyValue = compartmentPropertyValue;
	}

	/**
	 * Returns the {@link CompartmentId} of this event
	 */
	public CompartmentId getCompartmentId() {
		return compartmentId;
	}

	/**
	 * Returns the {@link CompartmentPropertyId} of this event
	 */
	public CompartmentPropertyId getCompartmentPropertyId() {
		return compartmentPropertyId;
	}

	/**
	 * Returns the property value of this event
	 */
	public Object getCompartmentPropertyValue() {
		return compartmentPropertyValue;
	}

}
