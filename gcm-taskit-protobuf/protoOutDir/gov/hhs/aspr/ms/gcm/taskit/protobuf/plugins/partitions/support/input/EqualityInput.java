// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partitions/support.proto

package gov.hhs.aspr.ms.gcm.taskit.protobuf.plugins.partitions.support.input;

/**
 * <pre>
 * Equality
 * </pre>
 *
 * Protobuf enum {@code gov.hhs.aspr.ms.gcm.taskit.protobuf.plugins.EqualityInput}
 */
public enum EqualityInput
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>LESS_THAN = 0;</code>
   */
  LESS_THAN(0),
  /**
   * <code>LESS_THAN_EQUAL = 1;</code>
   */
  LESS_THAN_EQUAL(1),
  /**
   * <code>EQUAL = 2;</code>
   */
  EQUAL(2),
  /**
   * <code>NOT_EQUAL = 3;</code>
   */
  NOT_EQUAL(3),
  /**
   * <code>GREATER_THAN_EQUAL = 4;</code>
   */
  GREATER_THAN_EQUAL(4),
  /**
   * <code>GREATER_THAN = 5;</code>
   */
  GREATER_THAN(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>LESS_THAN = 0;</code>
   */
  public static final int LESS_THAN_VALUE = 0;
  /**
   * <code>LESS_THAN_EQUAL = 1;</code>
   */
  public static final int LESS_THAN_EQUAL_VALUE = 1;
  /**
   * <code>EQUAL = 2;</code>
   */
  public static final int EQUAL_VALUE = 2;
  /**
   * <code>NOT_EQUAL = 3;</code>
   */
  public static final int NOT_EQUAL_VALUE = 3;
  /**
   * <code>GREATER_THAN_EQUAL = 4;</code>
   */
  public static final int GREATER_THAN_EQUAL_VALUE = 4;
  /**
   * <code>GREATER_THAN = 5;</code>
   */
  public static final int GREATER_THAN_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EqualityInput valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static EqualityInput forNumber(int value) {
    switch (value) {
      case 0: return LESS_THAN;
      case 1: return LESS_THAN_EQUAL;
      case 2: return EQUAL;
      case 3: return NOT_EQUAL;
      case 4: return GREATER_THAN_EQUAL;
      case 5: return GREATER_THAN;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EqualityInput>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EqualityInput> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EqualityInput>() {
          public EqualityInput findValueByNumber(int number) {
            return EqualityInput.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return gov.hhs.aspr.ms.gcm.taskit.protobuf.plugins.partitions.support.input.Support.getDescriptor().getEnumTypes().get(0);
  }

  private static final EqualityInput[] VALUES = values();

  public static EqualityInput valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EqualityInput(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:gov.hhs.aspr.ms.gcm.taskit.protobuf.plugins.EqualityInput)
}

