<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://maven.apache.org/POM/4.0.0"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>gov.hhs.aspr.ms.gcm.taskit.protobuf</groupId>
    <artifactId>protobuf-parent</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>
    <name>gcm :: taskit :: protobuf :: protobuf-parent</name>

    <properties>
        <!-- basic project properties -->
        <revision>2.4.0-SNAPSHOT</revision>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <!-- plugin versions -->
        <os-maven-plugin.version>1.7.0</os-maven-plugin.version>
        <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
        <build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>
        <flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>
        <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-replacer-plugin.version>1.3.2</maven-replacer-plugin.version>

        <!-- dependency versions -->
        <protobuf-taskit-core.version>2.4.0-SNAPSHOT</protobuf-taskit-core.version>
        <proto-definitions.version>1.12.0</proto-definitions.version>
        <gcm.version>4.0.0-SNAPSHOT</gcm.version>
        <protoc.version>3.21.12</protoc.version>
        <jacoco-maven-plugin.version>0.8.9</jacoco-maven-plugin.version>
        <junit-jupiter-engine.version>5.8.2</junit-jupiter-engine.version>
    </properties>

    <!--
        Default dependency information for projects that inherit from this one.
        The dependencies in this section are not immediately resolved. Instead,
        when a POM derived from this one declares a dependency described by a matching
        groupId and artifactId, the version and other values from this section are used
        for that dependency if they were not already specified.
    -->
    <dependencyManagement>
        <dependencies>
            <!-- core protobuf taskit dependency  -->
            <dependency>
                <groupId>gov.hhs.aspr.ms.taskit</groupId>
                <artifactId>protobuf</artifactId>
                <version>${protobuf-taskit-core.version}</version>
            </dependency>

            <!-- gcm dependency -->
            <dependency>
                <groupId>gov.hhs.aspr.ms</groupId>
                <artifactId>gcm</artifactId>
                <version>${gcm.version}</version>
                <!--
                    A scope of provided means that the resulting jar file will not include this in its dependencies
                    instead, must be provided by the project that uses this dependecy
                 -->
                <scope>provided</scope>
            </dependency>

            <!-- specified solely to alleviate a dependecy version conflict -->
            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>2.5.1</version>
            </dependency>

            <!-- unit test dependencies -->
            <dependency>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter-engine.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter-engine.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--
        This element describes all of the dependencies associated with a project.
        These dependencies are used to construct a classpath for your project during the build process.
        All projects that inherit this project (by specifing this project as their parent) will have these
        dependencies by default.
    -->
    <dependencies>
        <dependency>
            <groupId>gov.hhs.aspr.ms.taskit</groupId>
            <artifactId>protobuf</artifactId>
        </dependency>
        <dependency>
            <groupId>gov.hhs.aspr.ms</groupId>
            <artifactId>gcm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
        </dependency>
    </dependencies>

    <!--
        The modules (sometimes called subprojects) to build as a part of this project.
        Each module listed is a relative path to the directory containing the module.
        To be consistent with the way default urls are calculated from parent, it is
        recommended to have module names match artifact ids.
     -->
    <modules>
        <!--
            proto-definitions does not inheirt from this parent pom,
            however including it here insures that the project will be
            built each time this or any child projects are built
        -->
        <module>proto-definitions</module>
    </modules>

    <build>
        <!--
            Default plugin information to be made available for reference by projects derived from this one.
            This plugin configuration will not be resolved or bound to the lifecycle unless referenced.
            Any local configuration for a given plugin will override the plugin's entire definition here.
        -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>kr.motd.maven</groupId>
                    <artifactId>os-maven-plugin</artifactId>
                    <version>${os-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.xolstice.maven.plugins</groupId>
                    <artifactId>protobuf-maven-plugin</artifactId>
                    <version>${protobuf-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.google.code.maven-replacer-plugin</groupId>
                    <artifactId>maven-replacer-plugin</artifactId>
                    <version>${maven-replacer-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${flatten-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <!--
            The plugin executions defined here will be executed for each project that inherits this project.
            The plugins here are listed in order of execution to aid in understanding when they will run.
            Look up "maven lifecycle phases" and compare those to the phases in each execution for a more
            thorough understanding of when each plugin will execute.
         -->
        <plugins>
            <!-- detects os -->
            <plugin>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>detect-os</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>detect</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- unpacks the proto definitions and core proto definitions into the build directory (/target) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <?m2e ignore?>
                        <id>unpack-protos</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>gov.hhs.aspr.ms.gcm.taskit.protobuf</groupId>
                                    <artifactId>proto-definitions</artifactId>
                                    <version>${proto-definitions.version}</version>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                    <includes>**/*.proto</includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>gov.hhs.aspr.ms.taskit</groupId>
                                    <artifactId>protobuf</artifactId>
                                    <version>${protobuf-taskit-core.version}</version>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.outputDirectory}/gov/hhs/aspr/taskit/core</outputDirectory>
                                    <includes>**/*.proto</includes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- attaches generated proto sources to classpath -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-proto-gen-folder-as-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/protobuf/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- some of the generated proto files have warnings that clutter the 'problems' id the IDE. This adds a SuppressWarnings("all") to each generated file to clear up the warnings. -->
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>maven-replacer-plugin</artifactId>
                <executions>
                    <execution>
                        <?m2e execute onConfiguration,onIncremental?>
                        <id>replace-warnings-in-gen-files</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>target/generated-sources/**/*.java</include>
                    </includes>
                    <regex>true</regex>
                    <regexFlags>
                        <regexFlag>MULTILINE</regexFlag>
                    </regexFlags>
                    <replacements>
                        <replacement>
                            <token>^(@SuppressWarnings\(.*?\)\s+)?public final class</token>
                            <value>@SuppressWarnings("all") public final class</value>
                        </replacement>
                    </replacements>
                </configuration>
            </plugin>

            <!-- used with the ${revision} for versioning, creates a pom that has the version replaced with the value of ${revision} -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <executions>
                    <!-- enable flattening -->
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <configuration>
                            <updatePomFile>true</updatePomFile>
                        </configuration>
                    </execution>
                    <!-- ensure proper cleanup -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- runs unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>AT_*.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <excludes>
                        <exclude>**/test/**/*.class</exclude>
                        <exclude>**/input/**/*.class</exclude>
                        <exclude>**/testsupport/**/input/**/*.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.95</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.95</minimum>
                                        </limit>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.95</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- runs integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- attaches the source jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!--
        A listing of project-local build profiles which will modify the build process when activated.
     -->
    <profiles>
        <!-- default profile, will build all individual child projects -->
        <profile>
            <id>all-plugins</id>
            <activation>
                <!-- this profile will not be active if a profile is defined on the cmd line -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>nucleus-translator</module>
                <module>properties-plugin-translator</module>
                <module>stochastics-plugin-translator</module>
                <module>partitions-plugin-translator</module>
                <module>globalproperties-plugin-translator</module>
                <module>people-plugin-translator</module>
                <module>groups-plugin-translator</module>
                <module>regions-plugin-translator</module>
                <module>personproperties-plugin-translator</module>
                <module>resources-plugin-translator</module>
                <module>materials-plugin-translator</module>
                <module>reports-plugin-translator</module>
            </modules>
        </profile>

        <!-- will build the uber jar that contains all the individual child projects -->
        <profile>
            <id>all-jar</id>
            <modules>
                <module>nucleus-translator</module>
                <module>properties-plugin-translator</module>
                <module>stochastics-plugin-translator</module>
                <module>partitions-plugin-translator</module>
                <module>globalproperties-plugin-translator</module>
                <module>people-plugin-translator</module>
                <module>groups-plugin-translator</module>
                <module>regions-plugin-translator</module>
                <module>personproperties-plugin-translator</module>
                <module>resources-plugin-translator</module>
                <module>materials-plugin-translator</module>
                <module>reports-plugin-translator</module>
                <module>plugin-translators-all</module>
            </modules>
        </profile>

        <!-- each profile herein-after will build ONLY the child after which it is named -->
        <profile>
            <id>nucleus</id>
            <modules>
                <module>nucleus-translator</module>
            </modules>
        </profile>
        <profile>
            <id>props</id>
            <modules>
                <module>properties-plugin-translator</module>
            </modules>
        </profile>
        <profile>
            <id>stochastics</id>
            <modules>
                <module>stochastics-plugin-translator</module>
            </modules>
        </profile>
        <profile>
            <id>people</id>
            <modules>
                <module>people-plugin-translator</module>
            </modules>
        </profile>
        <profile>
            <id>partitions</id>
            <modules>
                <module>partitions-plugin-translator</module>
            </modules>
        </profile>
        <profile>
            <id>global-props</id>
            <modules>
                <module>reports-plugin-translator</module>
                <module>properties-plugin-translator</module>
                <module>globalproperties-plugin-translator</module>
            </modules>
        </profile>
        <profile>
            <id>groups</id>
            <modules>
                <module>reports-plugin-translator</module>
                <module>properties-plugin-translator</module>
                <module>people-plugin-translator</module>
                <module>groups-plugin-translator</module>
            </modules>
        </profile>
        <profile>
            <id>regions</id>
            <modules>
                <module>reports-plugin-translator</module>
                <module>properties-plugin-translator</module>
                <module>people-plugin-translator</module>
                <module>regions-plugin-translator</module>
            </modules>
        </profile>
        <profile>
            <id>reports</id>
            <modules>
                <module>reports-plugin-translator</module>
            </modules>
        </profile>
        <profile>
            <id>person-props</id>
            <modules>
                <module>reports-plugin-translator</module>
                <module>properties-plugin-translator</module>
                <module>people-plugin-translator</module>
                <module>personproperties-plugin-translator</module>
            </modules>
        </profile>
        <profile>
            <id>resources</id>
            <modules>
                <module>reports-plugin-translator</module>
                <module>properties-plugin-translator</module>
                <module>people-plugin-translator</module>
                <module>regions-plugin-translator</module>
                <module>resources-plugin-translator</module>
            </modules>
        </profile>
        <profile>
            <id>materials</id>
            <modules>
                <module>reports-plugin-translator</module>
                <module>properties-plugin-translator</module>
                <module>people-plugin-translator</module>
                <module>regions-plugin-translator</module>
                <module>resources-plugin-translator</module>
                <module>materials-plugin-translator</module>
            </modules>
        </profile>
    </profiles>

</project>